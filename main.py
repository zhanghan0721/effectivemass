# This is a sample Python script.

# Press Shift+F10 to execute it or replace it with your code.
# Press Double Shift to search everywhere for classes, files, tool windows, actions, and settings.


# -*- coding: utf-8 -*-
"""fit.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18pAyVqArtSdNMpqV25KU6_4oCLr82ijz
"""


import numpy as np
import matplotlib.pyplot as plt
from scipy import optimize
#effective mass function
def func(x,a):
    return a*x**2

fitdata = np.loadtxt(r'C:\Users\zhang\Desktop\WXW\HSE-5.csv',delimiter=",",dtype="float",unpack=True,skiprows=1)

#move k to gammar and move energy to CBM or VBM
for a in range(9):
  b = fitdata[a]
  d = b[0]
  for c in range(6):
    b[c] = b[c] - d
  fitdata[a] = b
print(fitdata)
fig = plt.figure(figsize=(8, 4))
# 如何在变量名中引入变量
names = locals()
for i in [0,3,6]:
  ah = optimize.curve_fit(func,fitdata[i],fitdata[i+1])[0]
  ae = optimize.curve_fit(func,fitdata[i],fitdata[i+2])[0]
  xf = np.arange(0, 0.0065, 0.00001)
  yhf = ah*xf**2
  yef = ae*xf**2
  # fig = plt.figure(figsize=(8, 16))
  plt.subplot(1,3,int(i/3+1))
  plt.scatter(fitdata[i],fitdata[i+1],35,"#990033")
  plt.scatter(fitdata[i],fitdata[i+2],35,'#3333CC')
  plt.plot(xf, yhf, "#990033")
  plt.plot(xf, yef, '#3333CC')
  plt.xticks([0,0.002,0.004],['0','2','4'],fontname='Times New Roman',fontsize=25)
  plt.yticks([])
  plt.xlim(0,0.006)
  plt.ylim(-0.025,0.030)
  # 如何在变量名中引入变量
  names['ax'+str(i)] = plt.gca()
#打补丁
ax0.set_yticks([-0.020,-0.010,0,0.010,0.020,0.030])
ax0.set_yticklabels([-20,-10,0,10,20,30],fontname='Times New Roman',fontsize=25)
ax6.set_xticks([0,0.002,0.004,0.006])
ax6.set_xticklabels(['0','2','4','6'],fontname='Times New Roman',fontsize=25)
plt.subplots_adjust(left=0.125, bottom=0.1, right=0.9, top=0.9, wspace=0, hspace=0.1)
plt.savefig(r"C:\Users\zhang\Desktop\WXW\HSE.svg",format='svg')
plt.show()
#change unit

for a in range(3):
  b = fitdata[a*3]
  c = fitdata[a*3+1]
  d = fitdata[a*3+2]
  for e in range(6):
    b[e] = b[e]*2*3.1415926*0.529177
    c[e] = c[e]/27.211399
    d[e] = d[e]/27.211399
  fitdata[a*3] = b
  fitdata[a*3+1] = c
  fitdata[a*3+2] = d

for i in [0,3,6]:
  ah = optimize.curve_fit(func,fitdata[i],fitdata[i+1])[0]
  ae = optimize.curve_fit(func,fitdata[i],fitdata[i+2])[0]
  print(1/2/ah,1/2/ae)
